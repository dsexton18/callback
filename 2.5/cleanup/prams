ansible_aap25_provisioning = true

ansible_debug_callback = true

For normal production hosts:

ansible_aap25_provisioning = true

ansible_debug_callback = false or uns




ansible_aap25_provisioning = true → enables this snippet for the host.

ansible_host_config_key = <AAP host config key>

ansible_tower_fqdn = <AAP controller FQDN>

ansible_job_template_id = <job template ID>

ansible_extra_vars = {"foo":"bar"} → optional extra vars.

ansible_debug_callback = true → optional, switches to debug w



Cloud-Init → saves service + timer + wrapper
            ↓
systemd starts timer (OnBootSec=2min)
            ↓
Timer triggers service
            ↓
Service runs wrapper script
            ↓
Wrapper calls AAP API, retries if necessary
            ↓
Success → service & timer disabled




                ┌───────────────────────┐
                │   Cloud-Init runs     │
                │  provisioning template │
                └─────────┬─────────────┘
                          │
        Creates service, timer, and wrapper script
                          │
                          ▼
       ┌───────────────────────────────────┐
       │ systemd timer:                    │
       │ ansible-aap25-callback.timer      │
       │ - OnBootSec=2min                  │
       │ - OnUnitActiveSec=1min (retries) │
       └─────────┬───────────────────────┘
                 │
                 ▼
       ┌───────────────────────────────┐
       │ systemd service:               │
       │ ansible-aap25-callback.service │
       │ Type=oneshot                   │
       │ ExecStart=/usr/local/bin/...   │
       └─────────┬─────────────────────┘
                 │
                 ▼
       ┌───────────────────────────────┐
       │ Wrapper script:               │
       │ aap25-callback-wrapper.sh     │
       │ (or debug variant)            │
       │ - Calls AAP API               │
       │ - Retries up to 10 times      │
       │ - Logs output                 │
       │ - Disables service+timer on success
       └─────────┬─────────────────────┘
                 │
                 ▼
       ┌────────
