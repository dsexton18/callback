<%#
kind: snippet
name: ansible_provisioning_callback_aap25
model: ProvisioningTemplate
snippet: true
description: |
  Setup one-time AAP 2.5 provisioning callback on first boot.
  Based on Satellite's "ansible_provisioning_callback", but installs a systemd
  timer and retry wrapper for reliability and logging.
-%>
<% if host_param_true?('ansible_aap25_provisioning') -%>
<%
  rhel_compatible = @host.operatingsystem.family == 'Redhat' && @host.operatingsystem.name != 'Fedora'
  os_major = @host.operatingsystem.major.to_i
  has_systemd = (@host.operatingsystem.name == 'Fedora' && os_major >= 20) || 
                (rhel_compatible && os_major >= 7) || 
                (@host.operatingsystem.name == 'Ubuntu' && os_major >= 15) || 
                (@host.operatingsystem.name == 'Debian' && os_major >= 8)
-%>
<% if has_systemd -%>
<%= save_to_file('/etc/systemd/system/ansible-aap25-callback.service',
                 snippet('ansible_aap25_callback_service')) %>
<%= save_to_file('/etc/systemd/system/ansible-aap25-callback.timer',
                 snippet('ansible_aap25_callback_timer')) %>
<%= save_to_file('/usr/local/bin/aap25-callback-wrapper.sh',
                 snippet('aap25_callback_wrapper')) %>
chmod 700 /usr/local/bin/aap25-callback-wrapper.sh
systemctl enable --now ansible-aap25-callback.timer
<% else -%>
# Fallback for non-systemd hosts
<%= save_to_file('/root/aap25-callback-wrapper.sh', snippet('aap25_callback_wrapper')) %>
(chmod +x /root/aap25-callback-wrapper.sh; crontab -u root -l 2>/dev/null; echo "@reboot /root/aap25-callback-wrapper.sh" ) | crontab -u root -
<% end -%>
<% end -%>
