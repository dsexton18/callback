<%#
kind: snippet
name: ansible_provisioning_callback
model: ProvisioningTemplate
snippet: true
description: |
  Set up one-time run of the Ansible Tower / AAP callback script on a host.
  Enhanced with a systemd timer for retries at boot.
-%>
<% if host_param_true?('ansible_tower_provisioning') -%>
<%
  rhel_compatible = @host.operatingsystem.family == 'Redhat' && @host.operatingsystem.name != 'Fedora'
  os_major = @host.operatingsystem.major.to_i
  has_systemd = (@host.operatingsystem.name == 'Fedora' && os_major >= 20) || 
                (rhel_compatible && os_major >= 7) || 
                (@host.operatingsystem.name == 'Ubuntu' && os_major >= 15) || 
                (@host.operatingsystem.name == 'Debian' && os_major >= 8)
-%>
<% if has_systemd -%>
<%= save_to_file('/etc/systemd/system/ansible-callback.service',
                 snippet('ansible_tower_callback_service')) %>
<%= save_to_file('/etc/systemd/system/ansible-callback.timer',
                 snippet('ansible_tower_callback_timer')) %>
# Enable timer so it starts at boot and retries if needed
systemctl enable --now ansible-callback.timer
<% else -%>
# Fallback for non-systemd hosts
<%= save_to_file('/root/ansible_provisioning_call.sh', snippet('ansible_tower_callback_script')) %>
(chmod +x /root/ansible_provisioning_call.sh; crontab -u root -l 2>/dev/null; echo "@reboot /root/ansible_provisioning_call.sh" ) | crontab -u root -
<% end -%>
<% end -%>
